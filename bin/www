#!/usr/bin/env node

/**
 * Module dependencies.
 */

const app = require("../app");
const path = require('path')
const https = require("https");
const http = require('http')
const fs = require('fs');


/**
 * Get port from environment and store in Express.
 */

const port = normalizePort(process.env.PORT);
app.set("port", port);

/**
 * Create HTTPS server.
 */

let https_options = {
  key: fs.readFileSync(path.join(__dirname, 'cert', "private.pem")),

  cert: fs.readFileSync(path.join(__dirname, 'cert', "nextreflexe_com.pem")),
};

let server;
if (process.env.NODE_ENV === "production") {
  server = https.createServer(https_options, app)
} else {
  server = http.createServer(app)
}

/**
 * Listen on provided port, on all network interfaces.
 */
server.listen(port);
server.on("error", ()=>console.log("something went wrong"));
server.on("listening", ()=> console.log(`server is running on port ${port}`));

/**
 * Normalize a port into a number, string, or false.
 */

function normalizePort(val) {
  const port = parseInt(val, 10);

  if (isNaN(port)) {
    // named pipe
    return val;
  }

  if (port >= 0) {
    // port number
    return port;
  }

  return false;
}
